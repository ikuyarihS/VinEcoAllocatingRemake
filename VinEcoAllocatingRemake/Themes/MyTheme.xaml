<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- derive from Light or Dark theme-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernUI.Dark.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- specify the accent color (optional) -->
    <Color x:Key="AccentColor">RoyalBlue</Color>

    <!-- custom theme resources-->
    <Rectangle x:Key="WindowBackgroundContent" x:Shared="false">
        <Rectangle.Fill>
            <LinearGradientBrush EndPoint="0,1" Opacity=".2">
                <GradientStop Offset="0" Color="Transparent" />
                <GradientStop Offset="1" Color="{DynamicResource AccentColor}" />
            </LinearGradientBrush>
        </Rectangle.Fill>
    </Rectangle>

    <!--Imitating 3D Effects.-->
    <Style x:Key="Random3DStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <!--Background.-->
                        <Rectangle x:Name="GelBackground" Opacity="1" RadiusX="9" RadiusY="9"
                                   Fill="{TemplateBinding Background}" StrokeThickness="0.35">
                            <Rectangle.Stroke>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="Gray" Offset="0" />
                                    <GradientStop Color="Gray" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>

                        <Rectangle x:Name="GelShine" Margin="2,2,2,0" VerticalAlignment="Top" Opacity="1"
                                   RadiusX="6" RadiusY="6" Stroke="Transparent" Height="15">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="Gray" Offset="0" />
                                    <GradientStop Color="Transparent" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>

                    <!--Define behaviours.-->
                    <ControlTemplate.Triggers>
                        <!--When Mouseover.-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Brown" />
                        </Trigger>

                        <!--When Pressed.-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="GelBackground">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="Blue" Offset="0" />
                                        <GradientStop Color="Blue" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!--When Enabled.-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="GelBackground" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="DimGray" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Width" Value="55" />
        <Setter Property="Height" Value="30" />
    </Style>

    <!--<Style x:Key="StyleCalendar" TargetType="{x:Type Calendar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                     Wrapping in ViewBox will enlarge calendar of that size.
                    <Viewbox Height="150"
                             Width="150">
                        <CalendarItem x:Name="PART_CalendarItem"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"/>
                        <CalendarItem x:Name="PART_CalendarItem"/>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style x:Key="RichTextBoxOutputStyle" TargetType="{x:Type RichTextBox}">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="270" />
        <Setter Property="BorderBrush" Value="DimGray" />
        <Setter Property="FontFamily" Value="Courier New" />
    </Style>-->

    <!--<Style x:Key="BorderAnimation" TargetType="Border">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Duration="0:0:0.400" To="3" Storyboard.TargetProperty="BorderThickness" />
                            <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Height" />
                            <DoubleAnimation Duration="0:0:0.300" To="125" Storyboard.TargetProperty="Width" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Duration="0:0:0.250" To="0" Storyboard.TargetProperty="BorderThickness" />
                            <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Height" />
                            <DoubleAnimation Duration="0:0:0.150" To="100" Storyboard.TargetProperty="Width" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource {x:Type RichTextBox}}">
        <Setter Property="Margin" Value="7,7,7,7" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="270" />
        <Setter Property="BorderBrush" Value="DimGray" />
        <Setter Property="FontFamily" Value="Courier New" />
    </Style>

</ResourceDictionary>